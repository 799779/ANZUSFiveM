"use strict";(self.webpackChunknpwd_ag_darkweb=self.webpackChunknpwd_ag_darkweb||[]).push([[115],{9080:(e,t,n)=>{n.d(t,{Z:()=>G});var r=n(2950),a=n.n(r),o=n(6235),c=n(9352),i=n(9062),l=n(2440),u=n(5137),s=n(3694),f=n(799),d=n(6867),p=n(417),m=n(7109),h=n(8584),v=n(9845);const b=function(e){var t=e.item,n=e.handleAddToCart;return a().createElement(f.ZP,{secondaryAction:a().createElement(d.Z,{edge:"end","aria-label":"add",onClick:function(){return n(t)}},a().createElement(v.AddShoppingCart,null))},a().createElement(p.Z,null,a().createElement(m.Z,{src:"nui://ox_inventory/web/images/".concat(t.item,".png")})),a().createElement(h.Z,{primary:t.label,secondary:"Price: ".concat(t.price," - Stock: ").concat(t.stock)}))};var y=n(8532),g=function(){return g=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},g.apply(this,arguments)},w=function(e,t,n){if(n||2===arguments.length)for(var r,a=0,o=t.length;a<o;a++)!r&&a in t||(r||(r=Array.prototype.slice.call(t,0,a)),r[a]=t[a]);return e.concat(r||Array.prototype.slice.call(t))};const k=function(){var e=(0,u.useRecoilValue)(s.G),t=((0,u.useRecoilRefresher_UNSTABLE)(s.G),(0,y.$3)()),n=function(n){t((function(t){var r,a,o=t.find((function(e){return e.id===n.id})),c=null!==(a=null===(r=e.find((function(e){return e.id===n.id})))||void 0===r?void 0:r.stock)&&void 0!==a?a:1;return o?t.map((function(e){return e.id===n.id&&e.amount+1<=c?g(g({},e),{amount:e.amount+1}):e})):w(w([],t,!0),[g(g({},n),{amount:1})],!1)}))};return a().createElement(l.Z,{sx:{width:"100%"}},e.map((function(e){return a().createElement(b,{key:e.id,item:e,handleAddToCart:n})})))},E=function(){return a().createElement("div",null,a().createElement(a().Suspense,{fallback:a().createElement(i.Z,null)},a().createElement(k,null)))};var Z=n(6914),x=n(1508),S=n(2658);const C=function(e){var t=e.item,n=e.removeFromCart;return a().createElement(f.ZP,{secondaryAction:a().createElement(d.Z,{edge:"end","aria-label":"add",onClick:function(){return n(t)}},a().createElement(v.RemoveShoppingCart,null))},a().createElement(p.Z,null,a().createElement(m.Z,{src:"nui://ox_inventory/web/images/".concat(t.item,".png")})),a().createElement(h.Z,{primary:t.label,secondary:"Price: ".concat(t.price," - Amount: ").concat(t.amount)}))};var T=n(4382),_=n(1629),P=function(){return P=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},P.apply(this,arguments)};const A=function(){var e=(0,y._P)(),t=(0,y.$3)(),n=(0,u.useRecoilRefresher_UNSTABLE)(s.G),o=(0,r.useState)(0),c=o[0],i=o[1],f=function(e){t((function(t){return t.map((function(t){return t.id===e.id?P(P({},t),{amount:t.amount-1}):t})).filter((function(e){return e.amount>0}))}))};return(0,r.useEffect)((function(){i(e.reduce((function(e,t){return e+t.price*t.amount}),0))}),[e]),a().createElement("div",{style:{display:"flex",flexDirection:"column",alignItems:"center"}},e.length>0?a().createElement(a().Fragment,null,a().createElement(l.Z,{sx:{width:"100%"}},e.map((function(e){return a().createElement(C,{key:e.id,item:e,removeFromCart:f})}))),a().createElement(Z.Z,{variant:"contained",color:"primary",sx:{marginTop:"auto",fontFeatureSettings:"tnum",fontVariantNumeric:"tabular-nums"},onClick:function(){return r=void 0,a=void 0,c=function(){return function(e,t){var n,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}(this,(function(r){return(0,T.Z)(_.w.Checkout,e).then((function(e){t([]),n()})),[2]}))},new((o=void 0)||(o=Promise))((function(e,t){function n(e){try{l(c.next(e))}catch(e){t(e)}}function i(e){try{l(c.throw(e))}catch(e){t(e)}}function l(t){var r;t.done?e(t.value):(r=t.value,r instanceof o?r:new o((function(e){e(r)}))).then(n,i)}l((c=c.apply(r,a||[])).next())}));var r,a,o,c}},"Purchase for ",c)):a().createElement(x.Z,{sx:{margin:0,position:"absolute",top:"50%",left:"50%","-ms-transform":"translate(-50%, -50%)",transform:"translate(-50%, -50%)"}},a().createElement(S.Z,{variant:"h5",color:"primary.contrastText"},"Basket is empty")))},R=function(){return a().createElement("div",null,a().createElement(a().Suspense,{fallback:a().createElement(i.Z,null)},a().createElement(A,null)))},G=function(){return a().createElement(o.Switch,null,a().createElement(o.Route,{exact:!0,path:"".concat(c.path),component:E}),a().createElement(o.Route,{path:"".concat(c.path,"/basket"),component:R}))}},7951:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(8716),a=n(5974),o=n(2950),c=n.n(o),i=n(7036),l=n(6115),u=n(3486),s=i.Z[900],f=l.Z.white,d=(l.Z.black,{light:{palette:{mode:"light",primary:{main:s,dark:u.Z[700],light:u.Z[300],contrastText:f},secondary:{main:"#d32f2f",light:"#eb4242",dark:"#941212",contrastText:f},success:{main:"#2196f3",contrastText:f}}},dark:{palette:{mode:"dark",primary:{main:s,dark:i.Z[900],light:i.Z[100],contrastText:f},secondary:{main:"#d32f2f",light:"#eb4242",dark:"#941212",contrastText:f},success:{main:"#2196f3",contrastText:f}}}});const p=function(e){var t=e.children,n=e.mode,o=d[n],i=(0,r.Z)(o);return c().createElement(a.Z,{theme:i},t)}},8532:(e,t,n)=>{n.d(t,{_P:()=>o,$3:()=>c});var r=n(5137),a={items:(0,r.atom)({key:"ag:dwcartitems",default:[]})},o=function(){return(0,r.useRecoilValue)(a.items)},c=function(){return(0,r.useSetRecoilState)(a.items)}},3694:(e,t,n)=>{n.d(t,{G:()=>l});var r=n(5137),a=n(4382),o=n(5181),c=n(1629),i=function(e,t,n){if(n||2===arguments.length)for(var r,a=0,o=t.length;a<o;a++)!r&&a in t||(r||(r=Array.prototype.slice.call(t,0,a)),r[a]=t[a]);return e.concat(r||Array.prototype.slice.call(t))}([{id:1,label:"VPN",price:3e3,image:"",stock:3,item:"vpn"},{id:4,label:"Hppy",price:30,image:"",stock:10,item:"vpn"}],Array.from({length:20},(function(e,t){return{id:t+5,label:"Item ".concat(t+1),price:Math.floor(100*Math.random())+1,image:"",stock:Math.floor(10*Math.random())+1,item:"vpn"}})),!0),l=(0,r.atom)({key:"ag:dwitems",default:(0,r.selector)({key:"ag:dwdefaultItems",get:function(){return e=void 0,t=void 0,r=function(){var e;return function(e,t){var n,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,(0,a.Z)(c.w.GetItems)];case 1:return(e=t.sent()).data?[2,e.data]:(console.log("no response data"),[2,[]]);case 2:return t.sent(),(0,o.I)()?[2,i]:[2,[]];case 3:return[2]}}))},new((n=void 0)||(n=Promise))((function(a,o){function c(e){try{l(r.next(e))}catch(e){o(e)}}function i(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,i)}l((r=r.apply(e,t||[])).next())}));var e,t,n,r}})})},2522:(e,t,n)=>{n.d(t,{b:()=>i});var r=n(5475),a=n(5137),o=n(1629),c=n(3694),i=function(){(0,a.useRecoilValue)(c.G);var e=(0,a.useRecoilRefresher_UNSTABLE)(c.G);return(0,r.useNuiEvent)({event:o.w.UpdateData,callback:function(){e()}}),null}},231:(e,t,n)=>{n.d(t,{Z:()=>v});var r=n(9845),a=n(9602),o=n(3463),c=n(4172),i=n(2004),l=n(2950),u=n.n(l),s=n(6235),f=n(9352),d=n(8532),p=n(5500),m=(0,a.ZP)(o.Z)((function(e){var t=e.theme;return{"& .MuiBadge-badge":{right:-3,border:"2px solid ".concat(t.palette.background.paper),padding:"0 4px"}}})),h=(0,a.ZP)(c.Z)({"& .Mui-selected":{color:"white","& .MuiBottomNavigationAction-label":{color:"white"},"& .MuiSvgIcon-root":{fill:"white"}},"& .MuiBottomNavigationAction-label":{color:"gray"}});const v=function(){var e=(0,s.useLocation)(),t=(0,l.useState)(""),n=t[0],a=t[1],o=(0,d._P)(),c=(0,l.useState)(0),v=c[0],b=c[1];return(0,l.useEffect)((function(){a(e.pathname.replace(f.path,""))}),[e]),(0,l.useEffect)((function(){b(o.reduce((function(e,t){return e+t.amount}),0))}),[o]),u().createElement(h,{value:n,onChange:function(e,t){a(t)},showLabels:!0},u().createElement(i.Z,{label:"Home",value:"",color:"primary",component:s.NavLink,icon:u().createElement(r.HomeRounded,null),to:f.path}),u().createElement(i.Z,{label:"Basket",value:"/basket",color:"primary",component:s.NavLink,icon:u().createElement(m,{badgeContent:v,color:"secondary"},u().createElement(p.Z,null)),to:"".concat(f.path,"/basket")}))}},1551:(e,t,n)=>{n.d(t,{M:()=>s,Z:()=>d});var r,a,o=n(2950),c=n.n(o),i=n(2734),l=n(2658),u=n(932),s="4rem",f=u.Z.div(p||(r=["\n  display: flex;\n  align-items: center;\n\n  min-height: ",";\n  padding-left: 1.5rem;\n  background-color: ",";\n"],a=["\n  display: flex;\n  align-items: center;\n\n  min-height: ",";\n  padding-left: 1.5rem;\n  background-color: ",";\n"],Object.defineProperty?Object.defineProperty(r,"raw",{value:a}):r.raw=a,p=r),s,(function(e){return e.backgroundColor}));const d=function(e){var t=e.children,n=(0,i.Z)();return c().createElement(f,{backgroundColor:n.palette.primary.main},c().createElement(l.Z,{variant:"h5",color:"primary.contrastText"},t))};var p},4382:(e,t,n)=>{n.d(t,{Z:()=>o});const r=JSON.parse('{"u2":"npwd_ag_darkweb"}');var a=n(5181);const o=function(e,t,n){return o=this,c=void 0,l=function(){var o;return function(e,t){var n,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}(this,(function(c){switch(c.label){case 0:return o={method:"post",headers:{"Content-Type":"application/json; charset=UTF-8"},body:JSON.stringify(t)},(0,a.I)()&&n?[2,n]:[4,fetch("https://".concat(r.u2,"/").concat(e),o)];case 1:return[4,c.sent().json()];case 2:return[2,c.sent()]}}))},new((i=void 0)||(i=Promise))((function(e,t){function n(e){try{a(l.next(e))}catch(e){t(e)}}function r(e){try{a(l.throw(e))}catch(e){t(e)}}function a(t){var a;t.done?e(t.value):(a=t.value,a instanceof i?a:new i((function(e){e(a)}))).then(n,r)}a((l=l.apply(o,c||[])).next())}));var o,c,i,l}},5181:(e,t,n)=>{n.d(t,{I:()=>r});var r=function(){return!1}},1629:(e,t,n)=>{var r,a;n.d(t,{w:()=>r}),function(e){e.UpdateData="npwd:ag_darkweb:updateData",e.GetItems="npwd:ag_darkweb:getItems",e.Checkout="npwd:ag_darkweb:checkout"}(r||(r={})),function(e){e.GetItems="ag_darkweb:getItems",e.Checkout="ag_darkweb:checkout"}(a||(a={}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,