"use strict";(self.webpackChunknpwd_qb_racing=self.webpackChunknpwd_qb_racing||[]).push([[890,352],{9352:(e,n,t)=>{t.d(n,{path:()=>r}),t(4023),t(2950);var r="/racing"},4023:(e,n,t)=>{t.d(n,{Z:()=>y});var r=t(2950),o=t.n(r),i=t(5475),l=t(3839),a=t.n(l),c=t(6501),p=t(4810),d=t(9041),u=t(7951),x=t(1551),s=t(231),b=t(2453),f=t(8905),m=t(2522),h=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},g=function(){return g=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},g.apply(this,arguments)},v=a()(c.Z)(k||(k=h(["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  max-height: 100%;\n"],["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  max-height: 100%;\n"]))),w=a().div(z||(z=h(["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 1.5rem;\n  max-height: calc(100% - 3.5rem - ",");\n  overflow: auto;\n"],["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 1.5rem;\n  max-height: calc(100% - 3.5rem - ",");\n  overflow: auto;\n"])),x.M),E=function(e){return o().createElement(b.RecoilRoot,null,o().createElement(p.Z,{injectFirst:!0},o().createElement(u.Z,{mode:e.theme.palette.mode},o().createElement(v,{square:!0,elevation:0},o().createElement(o().Suspense,{fallback:o().createElement(d.Z,{color:"primary",sx:{position:"absolute",top:0,left:0,width:"100%"}})},o().createElement(m.b,null)),o().createElement(x.Z,null,"Racing"),o().createElement(w,null,o().createElement(o().Suspense,{fallback:o().createElement(d.Z,{color:"primary",sx:{position:"absolute",top:0,left:0,width:"100%"}})},o().createElement(f.Z,null))),o().createElement(s.Z,null)))))};const y=function(e){return o().createElement(i.NuiProvider,null,o().createElement(E,g({},e)))};var k,z},8890:(e,n,t)=>{t.r(n);var r=t(2950),o=t.n(r),i=t(2181),l=t.n(i),a=(t(9352),t(6235),t(3839)),c=t.n(a);t(4023),t.p,t(5475),t(2453),t(5142);var p,d,u,x=t(3626),s=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e};c().div(p||(p=s(["\n  position: relative;\n  width: 500px;\n  height: 1000px;\n"],["\n  position: relative;\n  width: 500px;\n  height: 1000px;\n"]))),c().div(d||(d=s(["\n  background: url(",");\n  position: absolute;\n  z-index: 100;\n  width: 500px;\n  height: 1000px;\n  pointer-events: none;\n"],["\n  background: url(",");\n  position: absolute;\n  z-index: 100;\n  width: 500px;\n  height: 1000px;\n  pointer-events: none;\n"])),(function(e){return e.src})),c().div(u||(u=s(["\n  z-index: 2;\n  position: absolute;\n  bottom: 100px;\n  left: 50px;\n  right: 50px;\n  top: 100px;\n  display: flex;\n  flex-direction: column;\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  border-radius: 20px;\n  overflow: hidden;\n"],["\n  z-index: 2;\n  position: absolute;\n  bottom: 100px;\n  left: 50px;\n  right: 50px;\n  top: 100px;\n  display: flex;\n  flex-direction: column;\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  border-radius: 20px;\n  overflow: hidden;\n"]))),(0,x.Z)({palette:{mode:"light"}}),l().render(o().createElement((function(){return null}),null),document.getElementById("root"))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,